#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : libfido2
Version  : 1.12.0
Release  : 4
URL      : https://developers.yubico.com/libfido2/Releases/libfido2-1.12.0.tar.gz
Source0  : https://developers.yubico.com/libfido2/Releases/libfido2-1.12.0.tar.gz
Summary  : A FIDO2 library
Group    : Development/Tools
License  : BSD-2-Clause
Requires: libfido2-bin = %{version}-%{release}
Requires: libfido2-lib = %{version}-%{release}
Requires: libfido2-license = %{version}-%{release}
BuildRequires : buildreq-cmake
BuildRequires : libcbor-dev
BuildRequires : openssl-dev
BuildRequires : systemd-dev
BuildRequires : zlib-dev

%description
libfido2 can be fuzzed using AFL or libFuzzer, with or without
ASAN/MSAN/UBSAN.
AFL is more convenient when fuzzing the path from the authenticator to
libfido2 in an existing application. To do so, use preload-snoop.c with a real
authenticator to obtain an initial corpus, rebuild libfido2 with -DFUZZ=ON, and
use preload-fuzz.c to read device data from stdin.

%package bin
Summary: bin components for the libfido2 package.
Group: Binaries
Requires: libfido2-license = %{version}-%{release}

%description bin
bin components for the libfido2 package.


%package dev
Summary: dev components for the libfido2 package.
Group: Development
Requires: libfido2-lib = %{version}-%{release}
Requires: libfido2-bin = %{version}-%{release}
Provides: libfido2-devel = %{version}-%{release}
Requires: libfido2 = %{version}-%{release}

%description dev
dev components for the libfido2 package.


%package lib
Summary: lib components for the libfido2 package.
Group: Libraries
Requires: libfido2-license = %{version}-%{release}

%description lib
lib components for the libfido2 package.


%package license
Summary: license components for the libfido2 package.
Group: Default

%description license
license components for the libfido2 package.


%prep
%setup -q -n libfido2-1.12.0
cd %{_builddir}/libfido2-1.12.0

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1671551464
mkdir -p clr-build
pushd clr-build
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=auto "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=auto "
%cmake .. -DBUILD_MANPAGES=off
make  %{?_smp_mflags}
popd

%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
cd clr-build; make test

%install
export SOURCE_DATE_EPOCH=1671551464
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/libfido2
cp %{_builddir}/libfido2-%{version}/LICENSE %{buildroot}/usr/share/package-licenses/libfido2/e24e893f32bebb1750f83d8e1b5c70abf8edd3da || :
pushd clr-build
%make_install
popd

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/fido2-assert
/usr/bin/fido2-cred
/usr/bin/fido2-token

%files dev
%defattr(-,root,root,-)
/usr/include/fido.h
/usr/include/fido/bio.h
/usr/include/fido/config.h
/usr/include/fido/credman.h
/usr/include/fido/eddsa.h
/usr/include/fido/err.h
/usr/include/fido/es256.h
/usr/include/fido/es384.h
/usr/include/fido/param.h
/usr/include/fido/rs256.h
/usr/include/fido/types.h
/usr/lib64/libfido2.so
/usr/lib64/pkgconfig/libfido2.pc

%files lib
%defattr(-,root,root,-)
/usr/lib64/libfido2.so.1
/usr/lib64/libfido2.so.1.12.0

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/libfido2/e24e893f32bebb1750f83d8e1b5c70abf8edd3da
